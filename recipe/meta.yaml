{% set version = '0.0.2' %}
{% set posix = 'm2-' if win else '' %}

package:
  name: r-zigg
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/zigg_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/zigg/zigg_{{ version }}.tar.gz
  sha256: 6ca47cc54af5b4decd80fbe420952c05c6aa7d3ddba9f489b8cccb2655082cec

build:
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/
  missing_dso_whitelist:
    - '*/R.dll'        # [win]
    - '*/Rblas.dll'    # [win]
    - '*/Rlapack.dll'  # [win]

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ stdlib('c') }}                # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ stdlib('m2w64_c') }}          # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]
    - cross-r-base {{ r_base }}    # [build_platform != target_platform]
  host:
    - r-base
  run:
    - r-base

test:
  commands:
    - $R -e "library('zigg')"           # [not win]
    - "\"%R%\" -e \"library('zigg')\""  # [win]

about:
  home: https://github.com/eddelbuettel/zigg
  license: GPL-2.0-or-later
  summary: 'The ''Ziggurat'' pseudo-random number generator (or PRNG), introduced by Marsaglia
    and Tsang (2000, <doi:10.18637/jss.v005.i08>) and further improved by Leong et al
    (2005, <doi:10.18637/jss.v012.i07>), offers a lightweight and very fast PRNG for
    the normal, exponential, and uniform distributions. It is provided here in a small
    zero-dependency package. It can be used from R as well as from ''C/C++'' code in
    other packages as is demonstrated by four included sample packages using four distinct
    methods to use the PRNG presented here in client package. The implementation is
    influenced by our package ''RcppZiggurat'' which offers a comparison among multiple
    alternative implementations but presented here in a lighter-weight implementation
    that is easier to use by other packages. The PRNGs provided are generally faster
    than the ones in base R: on our machine, the relative gains for normal, exponential
    and uniform are on the order of 7.4, 5.2 and 4.7 times faster than base R. However,
    these generators are of potentially lesser quality and shorter period so if in doubt
    use of the base R functions remains the general recommendation.'
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - conda-forge/r
